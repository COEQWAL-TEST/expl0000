! SWPITP_ExpContraint.wresl
							
! *****************************************************
!SWP ITP only applied on SWP exports
!
!Apr - May: SWP exports limited to maximum of 600 cfs or 40% of max allowable export under SJR I/E; applied with Delta is in excess conditions
!Aug: reduce SWP exports by 100 TAF in all the Wet and AN years

!AK 11/27/2019
!KS 12/13/2019 - updated references in the condition statements to the DELTA cycle; 

!Calculate the maximum allowable export with SJR I/E
define NMFS_MaxExp_ON {
    case AprMay {       
        condition month>=APR .AND. month<=MAY
        value SJRatio_MaxExp}
    case otherwise{
        condition always
        value 999999.}
}
define NMFS_MaxExp_ONdv {alias NMFS_MaxExp_ON kind 'NMFS' units 'cfs'}

!Limit wet year SJRIE cuts to 150 TAF after allowing 30 TAF buffer above allowed SJRIE.

!Determine how much of the 30 TAF buffer remains
define initial_30TAF_cut_reduction_ {std kind 'SJRIE' units 'TAF'}
define initial_30TAF_cut_reduction {
    case NoCutReduction {
        condition   range(month,jun,mar) .or. wyt_SAC> 1.5
                    .OR. C_SACSJR[Wheeling] >= 44500
                    .OR. NMFS_MaxExp_ON >= D_EXPTD[Wheeling]         !total SJR I/E export does not constrain
                    .OR. SWPExpCapShare_OMR*NMFS_MaxExp_ON >= D_BANKS_SWP[Wheeling]  !40% of the SJR I/E does not constrain constrain
                    .OR. D_BANKS_SWP[Wheeling] <= 600.                   !at or below Health and Safety Exports
        
        value       0.  
    }
    case otherwise {
        condition   always
        value       max(0., min(30. - initial_30TAF_cut_reduction_(-1), 
                                (D_BANKS_SWP[Wheeling]-max(600,SWPExpCapShare_OMR*NMFS_MaxExp_ON))*cfs_taf))
    }
}
goal set_initial_30TAF_cut_reduction_ {initial_30TAF_cut_reduction_ = initial_30TAF_cut_reduction}
        
!SWP export cut to meet ITP SJRIE criteria - DV
define SWPITP_ExpCut_SJRIE_ {std kind 'flow-delivery' units 'CFS'}

!Determine how much of the 150 TAF export reduction cap remains.
define export_reduction_cap {
    case NoReductionCap {
        condition   range(month,jun,mar) .or. wyt_SJR> 1.5
        value       99999.*cfs_taf  
    }
    case otherwise {
        condition   always
        value       max(0., 150. - SWPITP_ExpCut_SJRIE_(-1)*cfs_taf(-1))
    }   
}
define export_reduction_cap_ {alias export_reduction_cap kind 'SJRIE' UNITS 'TAF'}
define export_reduction_cap_cfs {value export_reduction_cap*taf_cfs}
define export_reduction_cap_cfs_ {alias export_reduction_cap_cfs kind 'SJRIE' UNITS 'CFS'}
         
!SWP export cut to meet ITP SJRIE criteria - SV
!Note that SWP export are first buffered by 30 TAF and export reductions are limited to 150 TAF in Wet years.
define SWPITP_ExpCut_SJRIE {     
    case AprMay {       
        condition month>=APR .AND. month<=MAY
                    .AND. C_SACSJR[Wheeling] < 44500 
                    .AND. NMFS_MaxExp_ON < D_EXPTD[Wheeling]         !total SJR I/E export must be less than the baseline total export
                    .AND. SWPExpCapShare_OMR*NMFS_MaxExp_ON < D_BANKS_SWP[Wheeling]  !40% of the SJR I/E must be less than the baseline SWP exports
                    .AND. D_BANKS[Wheeling] > 600.                   !Health and Safety Exports
        value min(export_reduction_cap_cfs, max(0,D_BANKS_SWP[Wheeling]-initial_30TAF_cut_reduction*taf_cfs
                -max(600,SWPExpCapShare_OMR*NMFS_MaxExp_ON))
        )}
    case otherwise{
        condition always
        value 0}
}
goal set_SWPITP_ExpCut_SJRIE_ {SWPITP_ExpCut_SJRIE_ = SWPITP_ExpCut_SJRIE}

! *****************************************************
!In Wet, Above Normal, and Below Normal years, ITP 100 TAF export cut carryover should be released to 
!support 80 km X2 in the summer months. 
define release_SWPITP_OroCarryover_ {std kind 'carryover-release' units 'cfs'}

!Track remaining ITP carryover in W, AN, and BN years
!Calculate spill of remaining ITP carryover that would be used in W, AN, and BN years.
define remain_SWPITP_OroCarryover_ {std kind 'carryover-remain' units 'taf'}

define ITP_Oro_Spill_of_Rem {
    case Spill1 {
        condition   S_OROVL[Wheeling] + 0.1 > S_OROVLLEVEL5 .and. month == mar
        value       min(SWPITP_OroCarryover_(-1),c_THERM_exc[Wheeling]*cfs_taf,c_YUBFEA_exc[Wheeling]*cfs_taf)
    }
    case Spill2 {
        condition   S_OROVL[Wheeling] + 0.1 > S_OROVLLEVEL5
        value       min(remain_SWPITP_OroCarryover_(-1),c_THERM_exc[Wheeling]*cfs_taf,c_YUBFEA_exc[Wheeling]*cfs_taf)
    }
    case otherwise {
        condition   always
        value       0.
    }   
}
define ITP_Oro_Spill_of_Rem_ {alias ITP_Oro_Spill_of_Rem kind 'carryover-spill' units 'taf'}

define remain_SWPITP_OroCarryover {
    case OFF {
        condition   range(month,oct,APR)
        value       0.
    }
    case June {
        condition   month == may .and. wyt_sac < 3.5
        value       max(0.,SWPITP_OroCarryover_(-1) - ITP_Oro_Spill_of_Rem)
    }
    case otherwise {
        condition   always
        value       max(0., remain_SWPITP_OroCarryover_(-1) - ITP_Oro_Spill_of_Rem - release_SWPITP_OroCarryover_(-1)*CFS_TAF(-1))
    }
}
goal set_remain_SWPITP_OroCarryover_ {remain_SWPITP_OroCarryover_ = remain_SWPITP_OroCarryover}

!Limit release of ITP carryover to Delta outflow necessary to target X2 of 80 km in W and AN years.
!Release all carryover in May in BN years.
define release_SWPITP_OroCarryover {
    case WandAN {
        condition wyt_sac < 2.5 
        value max(0.,min(DO_req_X2_ITP - C_SACSJR[Wheeling],remain_SWPITP_OroCarryover*TAF_cfs))
    }
    case May {
        condition   month == may
        value       remain_SWPITP_OroCarryover*TAF_cfs
    }
    case otherwise {
        condition   always
        value       0.
    }
}
goal set_release_SWPITP_OroCarryover_ {release_SWPITP_OroCarryover_ = release_SWPITP_OroCarryover}

!In Wet and above normal years, designate a minimum of 80 TAF of 100 TAF ITP export cut for carryover.
!Carryover can only occur is there is enough available capacity in Oroville.
define min_carryover {value 80.}  !TAF

!Calculate how much is remaining of the 100 TAF export cut to support freshening the Delta
!to 80 km in Wet and Above normal years.  Assume 80 TAF will be preserved for carryover unless
!there is insufficient room in Oroville.
define SWPITP_ExpCutX2dv {std kind 'flow-delivery' units 'CFS'}
define SWPITP_ExpCut_Carryover_ {std kind 'flow-delivery' units 'cfs'}

define likely_spill_threshold {
    case NotAugust {
        condition   range(month,sep,jul)
        value       99999.
    }
    case August {
        condition   always
        value       S_OROVLLEVEL5(1)
    }
}
define likely_spill_threshold_ {alias likely_spill_threshold kind 'Oroville' UNITS 'TAF'}

define remain_SWPITP_AugExpCut_ {std kind 'flex-account-remain' units 'taf'}
define remain_SWPITP_AugExpCut {
    case OFF {
        condition   range(month,oct,may)
        value       0.
    }
    case June {
        condition   month == jun
        value       max(0., SWPITP_AugExpCut - min_carryover)
    }
    case AugustCancelMinCarryover {
        condition   S_OROVL[Wheeling] + min_carryover > likely_spill_threshold !likely_spill_threshold = End of Sep flood curve in August
        value       max(0., remain_SWPITP_AugExpCut_(-1) + min_carryover - SWPITP_ExpCut_Carryover_(-1)*CFS_TAF(-1) - SWPITP_ExpCutX2dv(-1)*CFS_TAF(-1))
    }
    case otherwise {
        condition   always
        value       max(0., remain_SWPITP_AugExpCut_(-1) - SWPITP_ExpCutX2dv(-1)*CFS_TAF(-1))
    }
}
goal set_remain_SWPITP_AugExpCut_ {remain_SWPITP_AugExpCut_ = remain_SWPITP_AugExpCut}

!Determine cut in exports to meet 80 km X2 target. This is use of this years 100 TAF export cut.
!Carryover from previous year is used first.
define SWPITP_ExpCut_X2 {value max(0.,min(DO_req_X2_ITP - release_SWPITP_OroCarryover - C_SACSJR[Wheeling],remain_SWPITP_AugExpCut*TAF_cfs, D_BANKS_SWP[Wheeling] - 300.)) }
goal set_SWPITP_ExpCutX2dv {SWPITP_ExpCutX2dv = SWPITP_ExpCut_X2}

!Track how much of ITP 100 TAF export cut used for 80 km target.
define SWPITP_ExpCut_X2_used_ {std kind 'Flex-Account-Used' units 'TAF'}
define SWPITP_ExpCut_X2_used {
    case OFF {
        condition   range(month,jan,may) .or. (wateryear == 1922 .and. range(month,oct,dec))
        value       0.
    }
    case otherwise {
        condition   always
        value       SWPITP_ExpCut_X2_used_(-1) + SWPITP_ExpCut_X2*CFS_TAF
    }
}
goal set_SWPITP_ExpCut_X2_used_ {SWPITP_ExpCut_X2_used_ = SWPITP_ExpCut_X2_used}

!Calculate how much of ITP export cut unused for meeting 80 km target and therefore
!available for carryover if exports can be cut in a way to back the water in Oroville.
define ITP_Unused {value max(0.,SWPITP_AugExpCut - SWPITP_ExpCut_X2_used)}
define ITP_Unused_ {alias ITP_Unused kind 'carryover' units 'taf'}

! *****************************************************
!Unused ITP 100 TAF export cut will be cut in September.  The first priority is carryover
!in Oroville if storage capacity is available.  It goes to Delta outflow if not.
!SWPITP_ExpCut_Final is the Final September export cut whether it goes to carryover or outflow.
/*define SWPITP_ExpCut_Carryover_total_ {std kind 'flow-delivery' units 'taf'}
define SWPITP_ExpCut_Carryover_total {
    case Init {
        condition   (month == oct .and. wateryear == 1922) .or. range(month,nov,jul)
        value       0.
    }
    case otherwise {
        condition   always
        value       SWPITP_ExpCut_Carryover_total_(-1) + SWPITP_ExpCut_Carryover_(-1)*cfs_taf(-1)
    }
    
}
goal set_SWPITP_ExpCut_Carryover_total_ {SWPITP_ExpCut_Carryover_total_ = SWPITP_ExpCut_Carryover_total} */

define SWPITP_ExpCut_Final {
    case NoCut {
        condition   range(month,oct,aug) .or. wyt_sac > 2.5
        value       0.
    }/*
    case July {
        condition   month == jul
        value       max(0., 
                    min(min(ITP_Unused,min_carryover)*taf_cfs*0.5, 
                        D_BANKS_swp[Wheeling]- SWPITP_ExpCut_X2 - 300.,
                        (S_OROVLLEVEL5 - S_OROVL[Wheeling])*TAF_CFS,
                        C_THERM[Wheeling]-C_THERM_MIF[Wheeling],
                        C_YUBFEA[Wheeling]-C_YUBFEA_MIF[Wheeling]))
    }
    case August {
        condition   month == aug
        value       max(0., 
                    min((ITP_Unused-SWPITP_ExpCut_Carryover_total)*taf_cfs, 
                        D_BANKS_swp[Wheeling]- SWPITP_ExpCut_X2 - 300.,
                        (S_OROVLLEVEL5 - S_OROVL[Wheeling])*TAF_CFS,
                        C_THERM[Wheeling]-C_THERM_MIF[Wheeling],
                        C_YUBFEA[Wheeling]-C_YUBFEA_MIF[Wheeling]))
    }*/
    case otherwise {
        condition   always
        value       max(0., min((ITP_Unused)*taf_cfs, D_BANKS_swp[Wheeling]- 300.))
    }
}

!AltSWPITP_ExpCut_Carryover is the portion of SWPITP_ExpCut_Final backed into Oroville.
define SWPITP_ExpCut_Carryover {value max(0., min(SWPITP_ExpCut_Final,(S_OROVLLEVEL5 - S_OROVL[Wheeling])*TAF_CFS,C_THERM[Wheeling]-C_THERM_MIF[Wheeling],C_YUBFEA[Wheeling]-C_YUBFEA_MIF[Wheeling]))}
goal set_SWPITP_ExpCut_Carryover_ {SWPITP_ExpCut_Carryover_ = SWPITP_ExpCut_Carryover}

!AltSWPITP_ExpCut_Outflow is the portion of SWPITP_ExpCut_Final that flows out the Delta because there is no room in Oroville.
define SWPITP_ExpCut_Outflow {value       max(0., SWPITP_ExpCut_Final - SWPITP_ExpCut_Carryover)    }

!AltSWPITP_ExpCut_Credit is the portion of ITP_Unused credited to Oroville carryover because exports have already been cut 
!to meet Fall X2.
define SWPITP_ExpCut_Credit {
    case NotSeptember {
        condition   range(month,oct,aug)
        value       0.
    }
    case otherwise {
        condition   always
        value       max(0., (ITP_Unused)*taf_cfs - (D_BANKS_swp[Wheeling] - 300.))
    }
}

define SWPITP_ExpCut_Final_ {alias SWPITP_ExpCut_Final kind 'flow-delivery' units 'cfs'}
define SWPITP_ExpCut_Outflow_ {alias SWPITP_ExpCut_Outflow kind 'flow-delivery' units 'cfs'}
define SWPITP_ExpCut_Credit_ {alias SWPITP_ExpCut_Credit kind 'flow-delivery' units 'cfs'}
define SWPITP_ExpCut_Carryover_taf {alias SWPITP_ExpCut_Carryover*cfs_taf  kind 'flow-delivery' units 'taf'}
define SWPITP_ExpCut_Outflow_taf {alias SWPITP_ExpCut_Outflow*cfs_taf kind 'flow-delivery' units 'taf'}
define SWPITP_ExpCut_Credit_taf {alias SWPITP_ExpCut_Credit*cfs_taf kind 'flow-delivery' units 'taf'}

!Calculate spill of ITP carryover including outflow that occurs in September due to
!insufficient storage capacity in Oroville.
define ITP_Oro_Spill {
	case September {
		condition	month == sep
		value		SWPITP_ExpCut_Outflow*cfs_taf
	}
    case Spill {
        condition   S_OROVL[Wheeling] + 0.1 > S_OROVLLEVEL5
        value       min(SWPITP_OroCarryover_(-1),C_THERM_exc[Wheeling]*cfs_taf,C_YUBFEA_exc[Wheeling]*cfs_taf)
    }
    case otherwise {
        condition   always
        value       0.
    }   
}
define ITP_Oro_Spill_ {alias ITP_Oro_Spill kind 'carryover-spill' units 'taf'}

!Track ITP carryover.
define SWPITP_OroCarryover {
    case Init {
        condition   range(month,oct,AUG) .and. wateryear == 1922
        value       0.
    }
	case September {
		condition	month == sep
		value		SWPITP_ExpCut_Carryover*cfs_taf + SWPITP_ExpCut_Credit*cfs_taf
	}
    case Critical {
        condition   month == may .and. wyt_sac > 4.5
        value       0.          
    }
    case otherwise {
        condition   always
        value       max(0.,SWPITP_OroCarryover_(-1)          
                     - ITP_Oro_Spill 
                     - SMSCG_Carryover_Rel*cfs_taf
                     - release_SWPITP_OroCarryover*cfs_taf)
    }
}
goal set_SWPITP_OroCarryover_ {SWPITP_OroCarryover_ = SWPITP_OroCarryover}

!Total ITP export cuts (SJRIE and 100 TAF)
define SWPITP_ExpCutdv {alias SWPITP_ExpCut_SJRIE +  SWPITP_ExpCut_X2 + SWPITP_ExpCut_Final kind 'flow-delivery' units 'CFS'}


! *****************************************************
! SWP ITP operations flags - Cut to SWP Exports
define SWPITP_ExpCut_Flag {
    case SWPITP_ExpCut {
        condition SWPITP_ExpCut_SJRIE + SWPITP_ExpCut_X2 + SWPITP_ExpCut_Final > 1.
        value 1. }
	case otherwise {
		condition always
		value 0. }
}
define SWPITP_ExpCut_Flag_dv {alias SWPITP_ExpCut_Flag kind 'Flag' units 'none'}

! SWP ITP operations flags - Oroville Reoperation
define SWPITP_OroReop_Flag {
    case SWPITP_OroReop_backup {
        condition SWPITP_ExpCut_Carryover > 1.
		value 1. }
    case SWPITP_OroReop_release {
        condition release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO > 1.
		value -1. }
	case otherwise {
		condition always
		value 0. }
}
define SWPITP_OroReop_Flag_dv {alias SWPITP_OroReop_Flag kind 'Flag' units 'none'}

! SWP ITP operations flags - Increased Outflow
define SWPITP_IncOut_Flag {
    case SWPITP_IncOut {
        condition SWPITP_ExpCut_SJRIE + SWPITP_ExpCut_X2 + SWPITP_ExpCut_Outflow
				+ release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO > 1.
		value 1. }
	case otherwise {
		condition always
		value 0. }
}
define SWPITP_IncOut_Flag_dv {alias SWPITP_IncOut_Flag kind 'Flag' units 'none'}


! *********************************************************************************************************
! Implement ITP actions on SWP and system-wide operations
goal reduceD_BANKS_SWP {D_BANKS_SWP = D_BANKS_SWP[Wheeling] - SWPITP_ExpCut_SJRIE - SWPITP_ExpCut_X2 - SWPITP_ExpCut_Final}


!Feather/ Yuba River
goal fixC203 {C_THERM = C_THERM[Wheeling] + release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO - SWPITP_ExpCut_Carryover}
goal fixC223 {C_YUBFEA = C_YUBFEA[Wheeling] + release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO - SWPITP_ExpCut_Carryover}
goal setC203_ITP {C_THERM_ITP = C_THERM - C_THERM[Wheeling]}  ! negative if releasing less due to ITP backup

!Lower Sacramento River
goal fixC_SACFEA {
    lhs C_SACFEA + D_FREWEIR
    rhs C_SACFEA[Wheeling] + D_FREWEIR[Wheeling] + release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO - SWPITP_ExpCut_Carryover 
    lhs>rhs penalty 0  
    lhs<rhs constrain
}
goal fixC400 {
    lhs C_HOOD + C_YOLOBP 
    rhs C_HOOD[Wheeling] + C_YOLOBP[Wheeling] + release_SWPITP_OroCarryover + SMSCG_Oro_Rel_for_DO - SWPITP_ExpCut_Carryover 
    lhs>rhs penalty 99999  
    lhs<rhs constrain
}


! Lock down the CVP delta operation so that SWP bears the cost of ITP actions
goal DELTA3D418 {D_JONES = D_JONES[Wheeling]}

goal fix_CVPSW {
lhs WHSSW + SHADS + FOLDS
    rhs WHSSW[Wheeling] + SHADS[Wheeling] + FOLDS[Wheeling] 
    lhs>rhs penalty 99999  
    lhs<rhs penalty 99999  
}
!Delta Outflow
goal fixC406 {lhs C_SACSJR 
              rhs C_SACSJR[Wheeling] 
                + SWPITP_ExpCut_SJRIE 
                + SWPITP_ExpCut_X2 
                + SWPITP_ExpCut_Outflow                                         
                + release_SWPITP_OroCarryover 
                + SMSCG_Oro_Rel_for_DO + SMSCG_Carryover_Rel
!                + FriantRecap_EXC                                                         
              lhs>rhs penalty 99999
              lhs<rhs constrain
}

define ITP_DO_mod {alias SWPITP_ExpCut_SJRIE 
                + SWPITP_ExpCut_X2 
                + SWPITP_ExpCut_Outflow                                         
                + release_SWPITP_OroCarryover 
                + SMSCG_Oro_Rel_for_DO  + SMSCG_Carryover_Rel
                /*+ SMSCG_ITP_NDO_adj*/
                kind 'ITP-Adj' units 'cfs'}

! *****************************************************
goal Adj_C_CAA003_SWP {D_BANKS_SWP = D_BANKS_SWP[WHEELING] - SWPITP_ExpCut_SJRIE - SWPITP_ExpCut_X2 - SWPITP_ExpCut_Final}

